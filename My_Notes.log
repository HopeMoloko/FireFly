- Model is made up of the same number of real sources.
- Model --> Circularly Gaussian Function

- Do I add noise to the model or not? No.
- Noise level (sigma,centered at 0)

- Nested sampling , with mcmc for evolving a new point.
- MCMC uses a while-loop and breaks when it gets a better point.

- Do mcmc with a for-loop and check acceptance ratio.

-My acceptance ratio is being going to one all this time, How??
- rewrite the whole Algorithm one more time(Nope)


- Acceptance ratio always going to one may be a very small stepsize

--I have been using a One dimensional Gaussian function-Likelihood !!! It's Ok.
- I changed that but I'm not getting good results at all --Wrong.

- When i set prior to zero given that the sample is not within the interval, weird things happen.

        Accpt = 0
        for j in range(ndim):
            
            if (interval[0]<= new_point[j] <= interval[1]):
                Accpt += 1
        
        if Accpt == 4:
            prior = 1
        else: 
            prior = 0
            
    ---- This was because there was a bug!!
     
     Likelihood_new = loglike(new_point)*prior is WRONG!
     Likelihood_new = loglike(new_point)+log(prior) is Right!
     
 -I have changed the acceptance Ratio:
 
    > log_alpha = Likelihood_new-Likelihood_old
    > alpha = np.exp(log_alpha)
    
  - Larger stepsize longer runtime  (around 3 sigma)
  -Small stepsize needs more nest runs lower runtime ( around 0.5 sigma)
  
  - I haven't pushed up the number of sources because i need to make sure the simple case finds the sources.
  
  -Bugs Found:
  --Acceptance ratio
  --Likelihood_new = loglike(new_point)*prior (I forgot i was working in log-space)
  -- Weighting the posterior results (Went back to skillings paper)
  
  -Current problem:
  -I can only  find one a single source. Was I finding all sources by chance depending on stepsize,nest runs ?? Not sure.
  --> 
  - I only find atleast one so far, (maybe there's another bug but i double checked)
  - I need to let it run for a very long time? correct stepsize? -- Uncertain
  
  
  
  Code Review :
  - Define all inputs in the arguments space.
  - Instead of for-loops.
  
  
  Do parameter Estimation with Nested sampling.
  - Simple case where i had the example data problem. 
  
  -Meeting with Michelle:
  -write the simple nested sampling for the example case(done with mcmc)
  -check tests
  
  
  
  
  - Change the initializing with accept and reject. 
  - Is it correct to keep changing the scaling? Yes, or does it break the detailed balance.
  - Initialize over the entire parameter space ( not in zero to 60%)
  - Gaussian proposal not fucking uniform.
  -Logspace HOPE!!!!!
  
  ---
  
  3 December 2018 (3 hours)
  
  -Increase number of live points to 1000 and increase Likelihood evalutions to over 50000
  -check while-loop compared to for-loop for mcmc
  -Try one-by-one source evalution
  
  -----If this work then package code-------> Make a module.
  - Compare this with multinest
  
  
  ----------------------------------
  - So i reduced my image size and i was able to recover the sources effortlessly (50x50) it took 4min
  Evidence Z = -88.05873662526183 +-0.36182187340401184 : Information H = 65.45753403679439 
    time: 246.84045481681824s

- (100x100) it took 9 min ...(1000 live points and 100 000 runs)
-Evidence Z = -61.63845291798859 +-0.23001869171845502 : Information H = 52.908598539869644 
time: 567.0578258037567s

-(100X100) (2000 live points) - (100 000 nest runs) 
Evidence Z = -63.629957199182044 +-0.15231371318172643 : Information H = 46.398934446410436 
time: 375.01013684272766s

---04 December 2018
- (200pix) - 
Evidence Z = -59.95074051576535 +-0.15426593507092085 : Information H = 47.59595744661112 
time: 3636.0912935733795

     
     
-----For-loop
(200x200) - 3 sources ( 2000 live points and 10000 nested runs)
Evidence Z = -22244995.6923892 +-0.07937459432599636 : Information H = 12.600652448832989 
time: 1518.2983689308167